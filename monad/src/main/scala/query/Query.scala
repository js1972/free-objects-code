sealed trait Query[A]
final case class ForEach[A,B](source: List[A], next: Ref[A] => B) extends Query[B]
final case class Filter[A](pred: Expr[Bool], next: Bool => A) extends Query[A]
final case class Select[A](expr: Expr[A], next: A) extends Query[A]

sealed trait Expr[A]
final case class Ref[A](name: String) extends Expr[A]
final case class Gt(left: Expr[Num], right: Expr[Num]) extends Expr[Boolean]
final case class Lt(left: Expr[Num], right: Expr[Num]) extends Expr[Boolean]
final case class Add(left: Expr[Num], right: Expr[Num]) extends Expr[Num]
final case class Num(value: Int) extends Expr[Num]
final case class Bool(value: Boolean) extends Expr[Bool]
